#!/bin/bash

os-setup_backup_restore() {


	echo "${b}$short_name performs nightly backups and stores them locally for safekeeping.${x}"
	echo


	describe_setting() {

		echo "${b}Please set how many backups should be kept locally at the very minimum [suggested between 3 and 7].${x}"
		echo

	}

	os-set_option -o min_local_backups -v n -d y -s backups


	describe_setting() {

		echo "${b}Please set the maximum number of backups that should be kept locally [suggested between 8 and 42].${x}"
		echo

	}

	os-set_option -o max_local_backups -v n -d y -s backups


	describe_setting() {

		echo "${b}Please set the maximum space that local archives storage should occupy in MB [suggested between 1000 and 8000].${x}"
		echo

	}

	os-set_option -o max_local_storage -v n -d y -s backups


	describe_setting() {

		echo "${b}$short_name can store your backups on an S3 storage server for safe, offsite recovery in case of need.${x}"
		echo
		echo "${b}Now specify your desired backup storage location [local/s3]:${x}"
		echo

	}

	validate_input() {

		case $input in
			local)	backup_location=local
				valid=y
				;;
			s3)	backup_location=s3
				valid=y
				;;
			*)	echo "${r}${b}Invalid setting for | backup_type | in function | ${FUNCNAME[0]} |.${x}"
				echo
				valid=n
				;;
		esac

	}

	os-set_option -o backup_location -v y -d y -s backups


	if [ $backup_location = "s3" ]
	then

		mkdir -p "$conf_dir/backups/s3"

		read -rp "${b}Do you have an S3 file storage server already set up? (Y/n): ${x}" -n 1
		echo

		if [[ ! $REPLY =~ ^[Nn]$ ]]
		then

			echo "${b}Ok, so let's set up your S3 file storage server settings now.${x}"
			echo
			echo  "${r}${b}If you're setting up this machine to restore a previous $short_name installation from another machine, you must specify so now.${x}"
			echo
			echo "${b}Selecting yes at the next prompt will block ALL backups to S3 to avoid overwriting previous valid backups on S3 and give you a chance to restore them on this machine.${x}"
			echo
			echo "${r}${b}If you choose yes, make sure NOT to use this instance as it is [as it will NOT be backed up on S3] but rather remember to perform the restore right after you're finished running this install script.${x}"
			echo
			read -rp "${b}Are you setting up this machine to restore a previous $short_name installation from another machine? (Y/n): ${x}" -n 1
			echo

			if [[ ! $REPLY =~ ^[Nn]$ ]]
			then

				echo "${r}${b}Ok, blocking ALL backups to S3 until a restore is performed. Do so right after you're finished running this install script.${x}"
				echo

				restore_intent=y
				touch "$conf_dir/s3/block_s3_backups"

			else

				echo
				echo "${b}NOT selected restore mode, ${g}will allow S3 backups${x}${b}..."
				echo

			fi

		else

			echo
			echo "${b}No problem, follow this guide [link will be published here when ready] to configure your S3 file storage server.${x}"
			echo
			echo "${b}Keeping backups local for now [simply re-run this installation when you're ready to upgrade your backups to S3 enabled].${x}"
			echo

			backup_location=local
			echo "local" > $conf_dir/backup_location

		fi

	else

		echo
		echo "${b}Ok, keeping backups local. Remember to periodically copy your backups from the backups directory over to your backup storage machine!${x}"
		echo

		read -rp "${b}[press enter to continue reading...]${x}"

	fi


}
