#!/usr/bin/env bash

os-check_ipv6_connectivity() {

    while getopts ":s" arguments; do
        case $arguments in
            s)	silent="y"
            ;;
            \?)	echo "${r-}${b-}Invalid option | -$OPTARG | for function | ${FUNCNAME[0]} |.${x-}"
            echo
            os-exit_function
            ;;
        esac
    done
    OPTIND=1

    echo_function() {

        while getopts ":m:" arguments; do
            case $arguments in
                m)	message="$OPTARG"
                ;;
                \?)	echo "${r-}${b-}Invalid option | -$OPTARG | for function | ${FUNCNAME[0]} |.${x-}"
                echo
                os-exit_function
                ;;
            esac
        done
        OPTIND=1

        if [ ! "${silent}" = "y" ]
        then
            echo "${b-}${message}${x-}"
            echo
        fi

        unset message

    }

    echo_function -m "Now testing IPv6 connectivity..."

    ipv6_ping_test_addr="2001:4860:4860::8888"

    if ping6 -q -c 1 -W 1 $ipv6_ping_test_addr >/dev/null
    then
        echo_function -m "${g-}IPv6 connectivity good.${x-}"
        ipv6_avail=y
    else
        counter=4
        ping_acquired=y
        echo
        until ping6 -c1 $ipv6_ping_test_addr &>/dev/null
        do
            echo_function -m "${b-}Waiting $counter more seconds for IPv6 connectivity...${x-}"
            if [ $counter = 0 ]
            then
                ping_acquired=n
                break
            fi
            counter=$((counter - 1))
            sleep 1
        done
        if [ $ping_acquired = "y" ]
        then
            echo_function -m "${g-}${b-}IPv6 connectivity acquired.${x-}"
            ipv6_avail=y
        else
            echo_function -m "${r-}${b-}IPv6 connectivity not found.${x-}"
            ipv6_avail=n
        fi
    fi
    if [ $ipv6_avail = "y" ]
    then
        this_ipv6="$(dig +short -6 myip.opendns.com aaaa @resolver1.ipv6-sandbox.opendns.com)"
        echo_function -m "${b-}Your IPv6 global [public] address appears to be: | $this_ipv6 | ${x-}"
    fi
    echo_function -m "${b-}Finished testing IPv6 connectivity.${x-}"

    unset silent

}
