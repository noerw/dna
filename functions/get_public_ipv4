#!/usr/bin/env bash

dna-get_public_ipv4() {

    ############################################################################

    while getopts ":os" arguments
    do
        case $arguments
        in
            o)  export prompt_for_override="y"
                ;;
            s)	export silent="y"
                ;;
            \?)	dna-echo -e "Invalid option | ${n-}-${OPTARG}${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |."
                dna-exit
                ;;
        esac
    done
    OPTIND=1

    if [ "${prompt_for_override-}" = "y" ] && [ "${prompt_for_override-}" = "y" ]
    then
        dna-echo -e "Argument | ${n-}silent [-s]${r-} | is incompatible with | ${n-}prompt_for_override [-o]${r-} |."
        dna-exit
    fi

    ############################################################################

    this_ipv4="$(curl -s http://whatismyip.akamai.com/)"

    dna-echo -m "Your IPv4 public address appears to be: | ${y-}${this_ipv4}${n-} |."

    if [ "${prompt_for_override-}" = "y" ]
    then

        dna-ask_for_boolean -d "y" -q "Is this the correct public IPv4 you'd like to use for this machine?"

        if [ "${boolean_output}" = "y" ]
        then

            dna-echo -m "Ok, using this IPv4..."

        else

            validate_input() {

            	dna-validate_ipv4 -s -i "${input}"

            	if [ "${ip_is_valid}" = "y" ]
            	then
            		valid="y"
            	else
            		dna-echo -e "The value you specified does NOT appear to be a valid IPv4 address."
            		valid="n"
            	fi

                unset silent

            }

            dna-set_value -d "Now enter the public IPv4 of this machine that you'd like to use:" -v "y"

            this_ipv4="${value}"

            unset silent

        fi

    fi

}
