#!/usr/bin/env bash

dna-get_public_ipv4() {

    ############################################################################

    while getopts ":s" arguments
    do
        case $arguments
        in
            s)	export get_public_ipv4_silent="y"
                ;;
            \?)	dna-echo -e "Invalid option | ${n-}-${OPTARG}${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |."
                dna-exit
                ;;
        esac
    done
    OPTIND=1

    ############################################################################

    if [ ! -f "${tmp_project_dir}/public_ipv4_setup" ]
    then

        describe_setting() {

            dna-echo -m "Now enter the public IPv4 of this machine that you'd like to use:"

        }

        hint_value() {

            apparent_public_ipv4="$(curl -s http://whatismyip.akamai.com/)"

            dna-echo -m "Your IPv4 public address appears to be: | ${y-}${apparent_public_ipv4}${n-} |."

            dna-ask_for_boolean -d "y" -q "Is this the correct public IPv4 you'd like to use for this machine?"

            if [ "${boolean_output}" = "y" ]
            then

                dna-echo -m "Ok, using this IPv4..."
                new_value="${apparent_public_ipv4}"

            else

                dna-echo -m "Ok, not using this IPv4."

            fi

        }

        validate_input() {

            dna-validate_ipv4 -s -i "${input}"

            if [ "${ip_is_valid}" = "y" ]
            then
                valid="y"
            else
                dna-echo -e "The value you specified does NOT appear to be a valid IPv4 address."
                valid="n"
            fi

            unset silent

        }

        dna-set_option -o "public_ipv4" -p "network" -d "y" -h "y" -v "y"

        touch "${tmp_project_dir}/public_ipv4_setup"

    else

        if [ ! -n "${get_public_ipv4_silent-}" ]
        then

            dna-echo -m "Public IPv4 for this machine previously set during this installation to: | ${y-}${public_ipv4}${n-} |."

        fi

    fi

    unset get_public_ipv4_silent

    ############################################################################

}

dna-check_ipv6_connectivity() {

    ############################################################################

    ### Install dependencies

    dna-install_ping

    ############################################################################

    ### Get arguments

    while getopts ":s" arguments; do
        case $arguments in
            s)	export check_ipv6_connectivity_silent="y"
                ;;
            \?)	dna-echo -e "Invalid option | ${n-}-${OPTARG}${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |."
                dna-exit
                ;;
        esac
    done
    OPTIND=1

    ############################################################################

    ### Check to see if IPv6 connectivity is available

    dna-echo -m "Now testing IPv6 connectivity..."

    ipv6_ping_test_addr="2001:4860:4860::8888"

    if ping6 -q -c 1 -W 1 "${ipv6_ping_test_addr}" > /dev/null
    then
        dna-echo -s "IPv6 connectivity good."
        ipv6_available="y"
    else
        counter="4"
        ping_acquired="y"
        echo
        until ping6 -q -c 1 -W 1 "${ipv6_ping_test_addr}" &> /dev/null
        do
            dna-echo -m "Waiting ${counter} more seconds for IPv6 connectivity..."
            if [ "${counter}" = "0" ]
            then
                ping_acquired="n"
                break
            fi
            counter=$((counter - 1))
            sleep 1
        done
        if [ "${ping_acquired}" = "y" ]
        then
            dna-echo -s "IPv6 connectivity acquired."
            ipv6_available="y"
        else
            dna-echo -e "IPv6 connectivity not detected."
            ipv6_available="n"
            this_ipv6="null"
        fi
    fi

    ### Fetch current IPv6 global address if it's available

    if [ "${ipv6_available}" = "y" ]
    then
        this_ipv6="$(dig +short -6 myip.opendns.com aaaa @resolver1.ipv6-sandbox.opendns.com)"
        dna-echo -m "Your IPv6 global [public] address appears to be: | ${y-}${this_ipv6}${n-} |."
    fi

    unset check_ipv6_connectivity_silent

}
