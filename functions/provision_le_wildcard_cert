#!/usr/bin/env bash

dna-provision_le_wildcard_cert() {

    ############################################################################

    if [ $# -eq 0 ]
    then
        dna-echo -e "No argument supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
        dna-exit
    fi

    while getopts ":d:" arguments
    do
        case "${arguments}" in
            d)	domain="${OPTARG}"
                ;;
            \?)	dna-echo -e "Invalid option | ${n-}-${OPTARG}${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |."
                dna-exit
                ;;
        esac
    done
    OPTIND=1

    if [ -z "${domain-}" ]
    then
        dna-echo -e "Argument | ${n-}domain [-d]${r-} | must be supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
        dna-exit
    fi

    ############################################################################

    dna-install_certbot

    operation_message="provisioning a wildcard LetsEncrypt TLS [SSL] certificate for: | ${c-}${domain}${n-} |."

    dna-echo_operation -h

    if [ ! -z "${admin_mail-}" ]
    then
        certbot certonly --manual -d "$domain, *.$domain" -m "${admin_mail}" --agree-tos --keep-until-expiring --manual-public-ip-logging-ok --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory
    else
        certbot certonly --manual -d "$domain, *.$domain" --agree-tos --keep-until-expiring --manual-public-ip-logging-ok --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory
    fi

    echo

    dna-echo_operation -t

}
