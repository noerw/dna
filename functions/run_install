#!/usr/bin/env bash

dna-run_install() {

    ############################################################################

    ### Add padding to output

    echo

    ############################################################################

    ### Store current date and time into a var

    now="$(date +"%Y-%m-%d_%H-%M-%S")"

    ############################################################################

    ### Define latest version

    #export latest_vers="$(git --git-dir=${source_dir}/.git/ describe --tags | cut -f1 -d"-")"
    export latest_vers_final="$(cd ${source_dir} && semtag getfinal)"
    export latest_vers_tagged="$(cd ${source_dir} && semtag getlast)"
    export latest_vers_bl_edge="$(cd ${source_dir} && semtag getcurrent)"

    ############################################################################

    ### Launch the installer

    if [ "${custom_project_version-null}" = "b" ]
    then

        selected_vers="${latest_vers_bl_edge}"

        dna-echo -e "Installing | ${n-}bleeding-edge version${r-} | of | ${n-}${proj_name}${r-} | up to latest git commit as per | ${n-}-p b${r-} |."

        ( cd "${source_dir}" && git checkout - && bash ./install --return-check )

    elif [ "${custom_project_version-null}" = "l" ]
    then

        selected_vers="${latest_vers_tagged}"

        dna-echo -m "${o-}Installing | ${n-}latest-tagged version${o-} | of | ${n-}${proj_name}${o-} | [independently of its stability type] as per | ${n-}-p b${o-} |."

        ( cd "${source_dir}" && git checkout "tags/${latest_vers_tagged}" && bash ./install --return-check )

    else

        selected_vers="${latest_vers_final}"

        dna-echo -m "Installing ${proj_name} ${latest_vers_final}"

        ( cd "${source_dir}" && git checkout "tags/${latest_vers_final}" && bash ./install --return-check )

    fi

    ############################################################################

    ### Read the installer exit code and exit the script

    if [ -f "${source_dir}/install_complete" ]
    then

        dna-echo -s "Installation complete."

        ### Set installation complete checkfile with installed version

        cp "${conf_dir}/version/version_initiated" "${conf_dir}/version/version_installed"

        ### Remove installer directory

        dna-echo -m "Now removing installer directory..."

        dna-echo -m "Run | ${y-}git clone ${git_host}/${author_name}/${proj_name}${n-} | once again to download the latest installer."

        rm -r "${source_dir}"

        dna-echo -m "Exiting installer."

    else

        dna-echo -e "The installation has encountered an error."

        dna-echo -m "Please inspect the any error messages above and try performing the installation again or open an issue. Thank you."

        dna-exit

    fi

    ############################################################################

}
