#!/usr/bin/env bash

dna-run_install() {

    ############################################################################

    ### Add padding to output

    echo

    ############################################################################

    ### Store current date and time into a var

    now="$(date +"%Y-%m-%d_%H-%M-%S")"

    ############################################################################

    ### Define latest version

    export latest_vers_final="$(cd ${source_dir} && semtag getfinal)"
    export latest_vers_tagged="$(cd ${source_dir} && semtag getlast)"
    export latest_vers_bl_edge="$(cd ${source_dir} && semtag getcurrent)"

    ############################################################################

    ### Launch the installer

    if [ "${custom_project_version-}" = "l" ]
    then

        export selected_vers="v0.0.1-custom-local"

        dna-echo -e "Installing | ${n-}local version${r-} | of | ${n-}${proj_name}${r-} | respecting any local alteration performed as per | ${n-}-p l${r-} |."

        ( cd "${source_dir}" && bash ./install --return-check )

    elif [ "${custom_project_version-}" = "b" ]
    then

        if [ -z "${custom_branch}" ]
        then

            export selected_vers="${latest_vers_bl_edge}"

            dna-echo -e "Installing | ${n-}bleeding-edge version${r-} | of | ${n-}${proj_name}${r-} | up to latest git commit as per | ${n-}-p b${r-} |."

            ( cd "${source_dir}" && git fetch && git reset --hard origin/master && echo && bash ./install --return-check )

        else

            dna-echo -e "Installing | ${n-}bleeding-edge version${r-} | of | branch ${n-}${custom_branch}${r-} | of | ${n-}${proj_name}${r-} | as per | ${n-}-b ${custom_branch}${r-} |."

            ( cd "${source_dir}" && git fetch && git reset --hard origin/${custom_branch} && git config advice.detachedHead false && git checkout "${custom_branch}" && git pull && echo )

            export latest_custom_branch_vers_bl_edge="$(cd ${source_dir} && semtag getcurrent)"

            export selected_vers="${latest_custom_branch_vers_bl_edge}"

            Zecho $selected_vers
            dna-press_to_continue

            ( cd "${source_dir}" && bash ./install --return-check )

        fi

    elif [[ "${custom_project_version-}" == *"v"* ]]
    then

        export selected_vers="${custom_project_version}"

        dna-echo -m "${c-}Installing | ${n-}version ${selected_vers}${c-} | of | ${n-}${proj_name}${c-} | as per | ${n-}-p ${selected_vers}${c-} |."

        ( cd "${source_dir}" && git config advice.detachedHead false && git checkout "tags/${selected_vers}" && echo && bash ./install --return-check )

    elif [ "${custom_project_version-}" = "t" ]
    then

        export selected_vers="${latest_vers_tagged}"

        dna-echo -m "${o-}Installing | ${n-}latest-tagged version [${selected_vers}]${o-} | of | ${n-}${proj_name}${o-} | [independently of its stability type] as per | ${n-}-p t${o-} |."

        ( cd "${source_dir}" && git config advice.detachedHead false && git checkout "tags/${latest_vers_tagged}" && echo && bash ./install --return-check )

    else

        export selected_vers="${latest_vers_final}"

        dna-echo -m "Installing | ${g-}version [${selected_vers}]${n-} | of | ${g-}${proj_name}${n-} |."

        ( cd "${source_dir}" && git config advice.detachedHead false && git checkout "tags/${latest_vers_final}" && echo && bash ./install --return-check )

    fi

    ############################################################################

    ### Read the installer exit code and exit the script

    if [ -f "${source_dir}/install_complete" ]
    then

        dna-echo -s "Installation complete."

        ### Set installation complete checkfile with installed version

        cp "${conf_dir}/version/version_initiated" "${conf_dir}/version/version_installed"

        ### Remove installer directory

        dna-echo -m "Now removing installer directory..."

        dna-echo -m "Run | ${y-}git clone ${git_host}/${author_name}/${proj_name}${n-} | once again to download the latest installer."

        rm -r "${source_dir}"

        dna-echo -m "Exiting installer."

    else

        dna-echo -e "The installation has encountered an error."

        dna-echo -m "Please inspect the any error messages above and try performing the installation again or open an issue. Thank you."

        dna-exit

    fi

    ############################################################################

}
