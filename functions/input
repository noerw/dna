#!/usr/bin/env bash

set -eu

dna-ask_for_boolean() {

    ############################################################################

    if [ $# -eq 0 ]
    then
        dna-echo -e "No argument supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
        dna-exit
    fi

    while getopts ":d:q:" arguments
    do
        case $arguments in
            d)	default="${OPTARG}"
                ;;
            q)	question="${OPTARG}"
                ;;
            \?)	dna-echo -e "Invalid option | ${n-}-${OPTARG}${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |."
                dna-exit
                ;;
        esac
    done
    OPTIND=1

    if [ -z "${default-}" ]
    then
        dna-echo -e "Argument | ${n-}default [-d]${r-} | must be supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
        dna-exit
    fi

    if [ -z "${question-}" ]
    then
        dna-echo -e "Argument | ${n-}question [-q]${r-} | must be supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
        dna-exit
    fi

    if [ ! "${default}" = "y" ] && [ ! "${default}" = "n" ]
    then
        dna-echo -e "Invalid value | ${n-}-${default}${r-} | for option | ${n-}-d [default]${r-} | in function | ${n-}${FUNCNAME[0]}${r-} |."
    fi

    ############################################################################

    unset boolean_output

    if [ "${default}" = "y" ]
    then
        read -p "${b-}${question} (Y/n): ${x-}" -n 1 -r
    else
        read -p "${b-}${question} (y/N): ${x-}" -n 1 -r
    fi
    echo

    if [ "${default}" = "y" ]
    then

        if [[ ! $REPLY =~ ^[Nn]$ ]]
        then
            boolean_output="y"
        else
            echo
            boolean_output="n"
        fi

    elif [ "${default}" = "n" ]
    then

        if [[ $REPLY =~ ^[Yy]$ ]]
        then
            echo
            boolean_output="y"
        else
            boolean_output="n"
        fi

    fi

    unset default question

}

dna-read_input() {

    ### evaluate arguments.

	### ########################################################################

    while getopts ":p" arguments
	do
		case $arguments in
			l)	local read_input_prompt="y"
				;;
			\?)	dna-echo -e "Invalid option | ${n-}-${OPTARG}${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |."
		        dna-exit
		        ;;
		esac
	done
    OPTIND=1

	### ########################################################################

    read -n 1 -p "${b-}${read_input_prompt} ${x-}" read_input_answer;

}
