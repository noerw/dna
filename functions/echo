#!/usr/bin/env bash

dna-echo() {

    ############################################################################

    ### Do NOT use dna-exit as it depends on this.

    if [ $# -eq 0 ]
    then
        echo "${r-}${b-}No argument supplied for function | ${n-}${FUNCNAME[0]}${r-} |.${x-}"
        echo
        echo "${b-}Exiting...${x-}"
        echo
        sleep 1
        exit
    fi

    while getopts ":m:s:e:n" arguments
    do
        case $arguments in
            m)	message="${OPTARG}"
                ;;
            s)  success_message="${OPTARG}"
                ;;
            e)  error_message="${OPTARG}"
                ;;
            n)  no_newline="y"
                ;;
            \?)	echo "${r-}${b-}Invalid option | ${n-}-${OPTARG}${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |.${x-}"
                echo
                echo "${b-}Exiting...${x-}"
                echo
                sleep 1
                exit
                ;;
        esac
    done
    OPTIND=1

    display_error() {

        echo "${r-}${b-}Only one message argument can be specified for function | ${n-}${FUNCNAME[0]}${r-} |.${x-}"
        echo
        echo "${b-}Exiting...${x-}"
        echo
        sleep 1
        exit

    }

    if [ -z "${no_newline-}" ]
    then
        if [ $# -gt "2" ]
        then
            display_error
        fi
    else
        if [ $# -gt "4" ]
        then
            display_error
        fi
    fi

    if [ -z "${message-}" ] && [ -z "${success_message-}" ] && [ -z "${error_message-}" ]
    then
        echo "${r-}${b-}At least one message of any type must specified for function | ${n-}${FUNCNAME[0]}${r-} |.${x-}"
        echo
        echo "${b-}Exiting...${x-}"
        echo
        sleep 1
        exit
    fi

    ############################################################################

    if [ -z "${error_message-}" ]
    then
        if [ ! "${silent-null}" = "y" ]
        then
            if [ -n "${message-}" ]
            then
                echo "${b-}${message}${x-}"
            else
                echo "${g-}${b-}${success_message}${x-}"
            fi
        fi
    else
        echo "${r-}${b-}${error_message}${x-}"
    fi

    if [ ! "${silent-null}" = "y" ]
    then
        if [ -z "${no_newline-}" ]
        then
            echo
        fi
    fi

    unset message success_message error_message no_newline

}

dna-echo_operation() {

    ############################################################################

    if [ $# -eq 0 ]
    then
        dna-echo -e "No argument supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
        dna-exit
    fi

    while getopts ":ht" arguments; do
        case $arguments in
            h)	status="head"
                ;;
            t)	status="tail"
                ;;
            \?)	dna-echo -e "Invalid option | ${n-}-${OPTARG}${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |."
                dna-exit
                ;;
        esac
    done
    OPTIND=1

    if [ -z "${status-}" ]
    then
        dna-echo -e "Status flag | ${n-}head [-h] || tail [-t]${r-} | must be supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
        dna-exit
    fi

    if [ -z "${operation_message-}" ]
    then
        dna-echo -e "The variable | ${n-}operation_message${r-} | must be exported before calling the function | ${n-}${FUNCNAME[0]}${r-} |."
        dna-exit
    fi

    ############################################################################

    if [ "${status}" = "head" ]
    then

        dna-echo -m "Now ${operation_message}..."

    elif [ "${status}" = "tail" ]
    then

        dna-echo -s "Finished ${operation_message}."

    fi

    ############################################################################

}
